'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System

Namespace My.Resources
    
    'This class was auto-generated by the StronglyTypedResourceBuilder
    'class via a tool like ResGen or Visual Studio.
    'To add or remove a member, edit your .ResX file then rerun ResGen
    'with the /str option, or rebuild your VS project.
    '''<summary>
    '''  A strongly-typed resource class, for looking up localized strings, etc.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0"),  _
     Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.Runtime.CompilerServices.CompilerGeneratedAttribute(),  _
     Global.Microsoft.VisualBasic.HideModuleNameAttribute()>  _
    Friend Module Resources
        
        Private resourceMan As Global.System.Resources.ResourceManager
        
        Private resourceCulture As Global.System.Globalization.CultureInfo
        
        '''<summary>
        '''  Returns the cached ResourceManager instance used by this class.
        '''</summary>
        <Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Friend ReadOnly Property ResourceManager() As Global.System.Resources.ResourceManager
            Get
                If Object.ReferenceEquals(resourceMan, Nothing) Then
                    Dim temp As Global.System.Resources.ResourceManager = New Global.System.Resources.ResourceManager("MB_Tools.Resources", GetType(Resources).Assembly)
                    resourceMan = temp
                End If
                Return resourceMan
            End Get
        End Property
        
        '''<summary>
        '''  Overrides the current thread's CurrentUICulture property for all
        '''  resource lookups using this strongly typed resource class.
        '''</summary>
        <Global.System.ComponentModel.EditorBrowsableAttribute(Global.System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Friend Property Culture() As Global.System.Globalization.CultureInfo
            Get
                Return resourceCulture
            End Get
            Set
                resourceCulture = value
            End Set
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''rem Setting the &apos;boot&apos; keyword or a drive letter as arg2 sets both sdi and wim to use the device.
        '''rem Setting the &apos;boot&apos; keyword as args3-5 overrides the .sdi device to use the boot device and default paths, the .wim device stays as arg2
        '''rem defaults              boot              \boot\boot.wim   \boot\boot.sdi
        '''rem args:       |ID*     |WimSdi-Partition  |WimPath         |SdiPath     |OverrideSdiPartitionToUSE_boot|Store path
        '''rem                                                      [rest of string was truncated]&quot;;.
        '''</summary>
        Friend ReadOnly Property CreateBootEntry() As String
            Get
                Return ResourceManager.GetString("CreateBootEntry", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''bcdboot %1\Windows /d /addlast
        '''if %ERRORLEVEL% GTR 0 (
        '''  echo Create Boot Files ERROR.
        '''  endlocal
        '''  EXIT /b 14
        ''')
        '''echo Created Boot Files Successfully
        '''endlocal
        '''EXIT /b 0.
        '''</summary>
        Friend ReadOnly Property CreateBootOption() As String
            Get
                Return ResourceManager.GetString("CreateBootOption", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''bcdboot C:\Windows /s %1
        '''if %ERRORLEVEL% GTR 0 (
        '''  echo Create Boot Files ERROR.
        '''  endlocal
        '''  EXIT /b 14
        ''')
        '''echo Created Boot Files Successfully
        '''endlocal
        '''EXIT /b 0.
        '''</summary>
        Friend ReadOnly Property CreateBootOptionTwo() As String
            Get
                Return ResourceManager.GetString("CreateBootOptionTwo", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''REM if only drive letter provided creates boot sector and marks active
        '''REM usage:call CreateNewSystemBootDevice.bat DRIVE_LETTER
        '''if [%1]==[] EXIT /b 1
        '''echo Setting Up
        '''set &quot;USB_DriveLetter=%~1&quot;
        '''echo SELECT VOLUME=%USB_DriveLetter%&gt;&quot;%TEMP%\vm.s&quot;
        '''echo ACTIVE&gt;&gt;&quot;%TEMP%\vm.s&quot;
        '''echo exit&gt;&gt;&quot;%TEMP%\vm.s&quot;
        '''timeout /t 1
        '''diskpart /s &quot;%TEMP%\vm.s&quot;
        '''if %ERRORLEVEL% GTR 0 (
        '''  echo SET ACTIVE ERROR.
        '''  del /q &quot;%TEMP%\vm.s&quot;
        '''  EXIT /b 11
        ''')
        '''del /q &quot;%TEMP%\vm.s&quot;
        '''bootsect /nt60 %USB_DriveLetter% [rest of string was truncated]&quot;;.
        '''</summary>
        Friend ReadOnly Property CreateNewSystemBootDevice() As String
            Get
                Return ResourceManager.GetString("CreateNewSystemBootDevice", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''REM if only drive letter provided creates boot sector and marks active
        '''REM usage:call CreateUSB.bat DRIVE: install.wim-file(optional) install-image-index(optional-default 1)
        '''if [%1]==[] EXIT /b 1
        '''set RESULT=0
        '''echo Setting Up
        '''set &quot;USB_DriveLetter=%~1&quot;
        '''if [%2]==[justboot] goto CREATEBOOT
        '''set INDEX=1
        '''if NOT [%2]==[] if NOT [%2]==[True] if NOT [%2]==[False] SET &quot;IMAGEFILE=%~2&quot;
        '''if NOT [%3]==[] if NOT [%3]==[True] if NOT [%3]==[False] SET INDEX=%~3
        '''
        '''echo SELECT VOLUME=%USB_DriveLet [rest of string was truncated]&quot;;.
        '''</summary>
        Friend ReadOnly Property CreateUSB() As String
            Get
                Return ResourceManager.GetString("CreateUSB", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''setlocal
        '''REM Pass-in Variables(required*); Arg1*: VHD FileName-(drive):\path\file, Arg2*: Size(MB), Arg3: Windows Install Media file-(drive):\path\file, Arg4: Image #(1-100+)(defaults to 1 if not provided)
        '''REM usage:call CreateVHD.bat *vhd-file *Size(MB) install.wim-file(optional) install-image-index(optional-default 1)
        '''if [%1]==[] EXIT /b 1
        '''if [%2]==[] EXIT /b 2
        '''echo Setting Up
        '''set &quot;C_VHD=%~1&quot;
        '''set &quot;C_SIZE=%2&quot;
        '''if NOT [%3]==[] SET &quot;IMAGEFILE=%~3&quot;
        '''SET INDEX=1
        '''if NOT [%4]==[] SET INDEX=%~4 [rest of string was truncated]&quot;;.
        '''</summary>
        Friend ReadOnly Property CreateVHD() As String
            Get
                Return ResourceManager.GetString("CreateVHD", resourceCulture)
            End Get
        End Property
        
        '''<summary>
        '''  Looks up a localized string similar to @echo off
        '''REM Windows CMD for Dism to export or install drivers to mounted wim images.
        '''REM Or Export Drivers from the running image
        '''REM ARGS-LIST: &quot;DRIVERFOLDER=%~1&quot;, &quot;IMAGEFOLDER=%~2&quot;, if NOT [%3]==[] (&quot;install&quot;) else (&quot;Export&quot;)
        '''set &quot;DRIVERFOLDER=%USERPROFILE%\desktop\OEM-Drivers&quot;
        '''if NOT [%1]==[] (
        '''  set &quot;DRIVERFOLDER=%~1&quot;
        '''  if NOT [%2]==[] (
        '''    set &quot;IMAGEFOLDER=%~2&quot;
        '''    if [%3]==[&quot;install&quot;] (
        '''        REM Install drivers to ImageFolder from Driver Folder 
        '''        echo Installing Drivers to Imag [rest of string was truncated]&quot;;.
        '''</summary>
        Friend ReadOnly Property DriverTool() As String
            Get
                Return ResourceManager.GetString("DriverTool", resourceCulture)
            End Get
        End Property
    End Module
End Namespace
